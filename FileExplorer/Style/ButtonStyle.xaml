<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ap="clr-namespace:FileExplorer.Helper">


    <Style x:Key="RoundButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" 
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                               StrokeThickness="1" StrokeDashArray="1 2"
                                               RadiusX="{Binding Path=(ap:UIAttachedProp.Radius),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                               RadiusY="{Binding Path=(ap:UIAttachedProp.Radius),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                             />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                CornerRadius="{Binding Path=(ap:UIAttachedProp.Radius),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Grid>
                            <Image Name="imgDefault"
                                       Source="{Binding Path=(ap:UIAttachedProp.DefaultIcon),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Width="{Binding Path=(ap:UIAttachedProp.IconWidth),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Height="{Binding Path=(ap:UIAttachedProp.IconHeight),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                            <Image Name="imgOver"  Visibility="Collapsed"  
                                       Source="{Binding Path=(ap:UIAttachedProp.MouseOverIcon),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Width="{Binding Path=(ap:UIAttachedProp.IconWidth),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Height="{Binding Path=(ap:UIAttachedProp.IconHeight),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                            <Image Name="imgPressed"  Visibility="Collapsed"  
                                       Source="{Binding Path=(ap:UIAttachedProp.PressedIcon),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Width="{Binding Path=(ap:UIAttachedProp.IconWidth),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Height="{Binding Path=(ap:UIAttachedProp.IconHeight),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>

                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            <Setter Property="Visibility" TargetName="imgDefault" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="imgOver" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="imgPressed" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            <Setter Property="Visibility" TargetName="imgDefault" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="imgOver" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="imgPressed" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MultiIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" 
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                               StrokeThickness="1" StrokeDashArray="1 2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                        <Grid>
                            <Image Name="imgDefault"
                                       Source="{Binding Path=(ap:UIAttachedProp.DefaultIcon),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Width="{Binding Path=(ap:UIAttachedProp.IconWidth),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Height="{Binding Path=(ap:UIAttachedProp.IconHeight),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                            <Image Name="imgOver"  Visibility="Collapsed"  
                                       Source="{Binding Path=(ap:UIAttachedProp.MouseOverIcon),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Width="{Binding Path=(ap:UIAttachedProp.IconWidth),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Height="{Binding Path=(ap:UIAttachedProp.IconHeight),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                            <Image Name="imgPressed"  Visibility="Collapsed"  
                                       Source="{Binding Path=(ap:UIAttachedProp.PressedIcon),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Width="{Binding Path=(ap:UIAttachedProp.IconWidth),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                       Height="{Binding Path=(ap:UIAttachedProp.IconHeight),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>

                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>-->
                            <Setter Property="Visibility" TargetName="imgDefault" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="imgOver" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="imgPressed" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!--<Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>-->
                            <Setter Property="Visibility" TargetName="imgDefault" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="imgOver" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="imgPressed" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>