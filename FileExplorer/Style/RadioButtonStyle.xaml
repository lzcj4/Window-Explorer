<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FileExplorer.Style"
                    xmlns:vm="clr-namespace:FileExplorer.Helper">

    <Style x:Key="RadioButtonIconStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" 
                                           Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                           StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}"  Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                    CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="1,-1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Margin="2,0,2,2">
                                <Image Source="{Binding Path=(vm:UIAttachedProp.UncheckedIcon),RelativeSource={RelativeSource  TemplatedParent}}" 
                                       Width="{Binding Path=(vm:UIAttachedProp.IconWidth),RelativeSource={RelativeSource  TemplatedParent}}"
                                       Height="{Binding Path=(vm:UIAttachedProp.IconHeight),RelativeSource={RelativeSource  TemplatedParent}}" 
                                       x:Name="iconUnchecked" Margin="0,0,0,0"/>
                                <Image Source="{Binding Path=(vm:UIAttachedProp.CheckedIcon),RelativeSource={RelativeSource TemplatedParent}}"
                                       Width="{Binding Path=(vm:UIAttachedProp.IconWidth),RelativeSource={RelativeSource  TemplatedParent}}"
                                       Height="{Binding Path=(vm:UIAttachedProp.IconHeight),RelativeSource={RelativeSource  TemplatedParent}}" 
                                       x:Name="iconChecked" Visibility="Collapsed"/>

                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" 
                                                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                                               StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="#FFF3F9FF"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#FF5593FF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="#FFE6E6E6"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#FFBCBCBC"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="#FFD9ECFF"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#FF3C77DD"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="iconChecked" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="iconUnchecked" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="iconChecked" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="iconUnchecked" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>